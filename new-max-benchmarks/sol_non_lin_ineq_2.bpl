procedure main() {
  var i,j,k: int;
  i := 0;
  assume j > 0;
  assume k > 0;
  while (i < j*k)
  invariant  i - k <= 0 || (0 < i - k && i - k <= 2 && 1 < j && j + k <= 3 && i - j <= 0) || (0 < i - k && i - k <= 2 && 1 < j && 3 < j + k) || (0 < i - k && 2 < i - k && i - k <= 4 && 1 < j && 7 < i + j && i - k <= 3) || (0 < i - k && 2 < i - k && i - k <= 4 && 1 < j && 7 < i + j && 3 < i - k && j + k <= 5 && 0 < j - k && 1 < k) || (0 < i - k && 2 < i - k && i - k <= 4 && 1 < j && 7 < i + j && 3 < i - k && 5 < j + k) || (0 < i - k && 2 < i - k && 4 < i - k && i - j <= 0) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && j <= 3 && 1 < j && 5 < j + k && i - k <= 6 && j <= 2 && j - k <= -4) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && j <= 3 && 1 < j && 5 < j + k && i - k <= 6 && j <= 2 && -4 < j - k && j - k <= -3 && i - k <= 5) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && j <= 3 && 1 < j && 5 < j + k && i - k <= 6 && 2 < j) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && j <= 3 && 1 < j && 5 < j + k && 6 < i - k && i - k <= 8 && 3 < k && j <= 2 && j - k <= -5) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && j <= 3 && 1 < j && 5 < j + k && 6 < i - k && i - k <= 8 && 3 < k && 2 < j) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && 3 < j && k <= 2 && i - j <= 4) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && 3 < j && k <= 2 && 4 < i - j && 2 < j - k && i - j <= 5) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && i - j <= 12 && 1 < k && 3 < j && 2 < k) || (0 < i - k && 2 < i - k && 4 < i - k && 0 < i - j && 12 < i - j && -7 < j - k && 7 < k && i - k <= 8);
  //invariant i <= j*k;
  {
    i := i + 1;
  }
  assert(i == j*k);
}
